==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [HLS 200-1505] Using default flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_latency=0
INFO: [HLS 200-1510] Running: set_part xczu7ev-ffvc1156-2-e 
INFO: [HLS 200-1611] Setting target device to 'xczu7ev-ffvc1156-2-e'
INFO: [HLS 200-1510] Running: config_compile -disable_unroll_code_size_check -pipeline_style flp 
WARNING: [XFORM 203-506] Disable code size check when do loop unroll.
WARNING: [HLS 200-643] The 'config_compile -disable_unroll_code_size_check' hidden command is deprecated and will be removed in a future release.
INFO: [HLS 200-1510] Running: config_interface -m_axi_addr64 
INFO: [HLS 200-1510] Running: config_rtl -module_auto_prefix 
INFO: [HLS 200-1510] Running: config_rtl -deadlock_detection none 
INFO: [HLS 200-1510] Running: create_clock -period 10.0 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.02 seconds. Elapsed time: 10.03 seconds; current allocated memory: 1.069 GB.
INFO: [HLS 200-10] Analyzing design file '/tmp/finn_dev_root/code_gen_ipgen_MVAU_hls_0_0r_f10vz/top_MVAU_hls_0.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.12 seconds. CPU system time: 0.54 seconds. Elapsed time: 3.7 seconds; current allocated memory: 1.076 GB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'FixedPointWeights<3u, ap_int<4>, 8u, 4u>::TileIndex::TileIndex(FixedPointWeights<3u, ap_int<4>, 8u, 4u> const&, unsigned int)' into 'FixedPointWeights<3u, ap_int<4>, 8u, 4u>::weights(unsigned int) const' (/home/changhong/prj/finn/deps/finn-hlslib/weights.hpp:146:9)
INFO: [HLS 214-131] Inlining function 'Slice<ap_int<8>, 8u>::Container<ap_uint<24> >::Container(ap_uint<24> const&)' into 'Slice<ap_int<8>, 8u>::Container<ap_uint<24> > Slice<ap_int<8>, 8u>::operator()<ap_uint<24> >(ap_uint<24> const&, unsigned int) const' (/home/changhong/prj/finn/deps/finn-hlslib/interpret.hpp:243:9)
INFO: [HLS 214-131] Inlining function 'Slice<ap_int<8>, 8u>::Container<ap_uint<24> >::operator()(unsigned int, unsigned int) const' into 'ap_int<13> mac<3u, ap_int<13>, std::array<ap_int<4>, 3ul>, Slice<ap_int<8>, 8u>::Container<ap_uint<24> >, ap_resource_dflt>(ap_int<13> const&, std::array<ap_int<4>, 3ul> const&, Slice<ap_int<8>, 8u>::Container<ap_uint<24> > const&, ap_resource_dflt const&, unsigned int)' (/home/changhong/prj/finn/deps/finn-hlslib/mac.hpp:169:19)
INFO: [HLS 214-131] Inlining function 'decltype((fp) * (fp0)) mul<ap_int<4>, ap_int<8> >(ap_int<4> const&, ap_int<8> const&, ap_resource_dflt const&)' into 'ap_int<13> mac<3u, ap_int<13>, std::array<ap_int<4>, 3ul>, Slice<ap_int<8>, 8u>::Container<ap_uint<24> >, ap_resource_dflt>(ap_int<13> const&, std::array<ap_int<4>, 3ul> const&, Slice<ap_int<8>, 8u>::Container<ap_uint<24> > const&, ap_resource_dflt const&, unsigned int)' (/home/changhong/prj/finn/deps/finn-hlslib/mac.hpp:169:9)
INFO: [HLS 214-131] Inlining function 'Slice<ap_uint<4>, 4u>::Container<ap_uint<32> >::operator ap_uint<32> const&() const' into 'void Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>(hls::stream<ap_uint<24>, 0>&, hls::stream<ap_uint<32>, 0>&, FixedPointWeights<3u, ap_int<4>, 8u, 4u> const&, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > > const&, int, ap_resource_dflt const&)' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:171:17)
INFO: [HLS 214-131] Inlining function 'Slice<ap_uint<4>, 4u>::Container<ap_uint<32> >::operator()(unsigned int, unsigned int, bool) const' into 'void Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>(hls::stream<ap_uint<24>, 0>&, hls::stream<ap_uint<32>, 0>&, FixedPointWeights<3u, ap_int<4>, 8u, 4u> const&, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > > const&, int, ap_resource_dflt const&)' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:168:2)
INFO: [HLS 214-131] Inlining function 'ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >::activate(unsigned int, unsigned int, ap_int<13> const&) const' into 'void Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>(hls::stream<ap_uint<24>, 0>&, hls::stream<ap_uint<32>, 0>&, FixedPointWeights<3u, ap_int<4>, 8u, 4u> const&, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > > const&, int, ap_resource_dflt const&)' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:168:33)
INFO: [HLS 214-131] Inlining function 'ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >::init(unsigned int, unsigned int) const' into 'void Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>(hls::stream<ap_uint<24>, 0>&, hls::stream<ap_uint<32>, 0>&, FixedPointWeights<3u, ap_int<4>, 8u, 4u> const&, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > > const&, int, ap_resource_dflt const&)' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:143:29)
INFO: [HLS 214-131] Inlining function 'ap_int<13> mac<3u, ap_int<13>, std::array<ap_int<4>, 3ul>, Slice<ap_int<8>, 8u>::Container<ap_uint<24> >, ap_resource_dflt>(ap_int<13> const&, std::array<ap_int<4>, 3ul> const&, Slice<ap_int<8>, 8u>::Container<ap_uint<24> > const&, ap_resource_dflt const&, unsigned int)' into 'void Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>(hls::stream<ap_uint<24>, 0>&, hls::stream<ap_uint<32>, 0>&, FixedPointWeights<3u, ap_int<4>, 8u, 4u> const&, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > > const&, int, ap_resource_dflt const&)' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:155:25)
INFO: [HLS 214-131] Inlining function 'FixedPointWeights<3u, ap_int<4>, 8u, 4u>::weights(unsigned int) const' into 'void Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>(hls::stream<ap_uint<24>, 0>&, hls::stream<ap_uint<32>, 0>&, FixedPointWeights<3u, ap_int<4>, 8u, 4u> const&, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > > const&, int, ap_resource_dflt const&)' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:149:29)
INFO: [HLS 214-131] Inlining function 'FixedPointWeights<3u, ap_int<4>, 8u, 4u>::TileIndex::operator[](unsigned int) const' into 'void Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>(hls::stream<ap_uint<24>, 0>&, hls::stream<ap_uint<32>, 0>&, FixedPointWeights<3u, ap_int<4>, 8u, 4u> const&, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > > const&, int, ap_resource_dflt const&)' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:152:30)
INFO: [HLS 214-131] Inlining function 'std::array<ap_int<4>, 3ul> const& Identity::operator()<std::array<ap_int<4>, 3ul> >(std::array<ap_int<4>, 3ul> const&) const' into 'void Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>(hls::stream<ap_uint<24>, 0>&, hls::stream<ap_uint<32>, 0>&, FixedPointWeights<3u, ap_int<4>, 8u, 4u> const&, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > > const&, int, ap_resource_dflt const&)' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:152:19)
INFO: [HLS 214-131] Inlining function 'Slice<ap_int<8>, 8u>::Container<ap_uint<24> > Slice<ap_int<8>, 8u>::operator()<ap_uint<24> >(ap_uint<24> const&, unsigned int) const' into 'void Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>(hls::stream<ap_uint<24>, 0>&, hls::stream<ap_uint<32>, 0>&, FixedPointWeights<3u, ap_int<4>, 8u, 4u> const&, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > > const&, int, ap_resource_dflt const&)' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:154:26)
INFO: [HLS 214-377] Adding 'threshs' into disaggregation list because there's array-partition pragma applied on the struct field (/tmp/finn_dev_root/code_gen_ipgen_MVAU_hls_0_0r_f10vz/top_MVAU_hls_0.cpp:33:9)
INFO: [HLS 214-377] Adding 'threshs' into disaggregation list because there's array-partition pragma applied on the struct field (/tmp/finn_dev_root/code_gen_ipgen_MVAU_hls_0_0r_f10vz/top_MVAU_hls_0.cpp:32:9)
INFO: [HLS 214-377] Adding 'weights' into disaggregation list because there's array-partition pragma applied on the struct field (/tmp/finn_dev_root/code_gen_ipgen_MVAU_hls_0_0r_f10vz/top_MVAU_hls_0.cpp:31:9)
INFO: [HLS 214-210] Disaggregating variable 'weights' (/tmp/finn_dev_root/code_gen_ipgen_MVAU_hls_0_0r_f10vz/params.h:1:42)
INFO: [HLS 214-210] Disaggregating variable 'threshs' (/tmp/finn_dev_root/code_gen_ipgen_MVAU_hls_0_0r_f10vz/thresh.h:1:0)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_139_2' is marked as complete unroll implied by the pipeline pragma (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:139:25)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_141_3' is marked as complete unroll implied by the pipeline pragma (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:141:20)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_150_4' is marked as complete unroll implied by the pipeline pragma (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:150:23)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_134_1' is marked as complete unroll implied by the pipeline pragma (/home/changhong/prj/finn/deps/finn-hlslib/weights.hpp:134:22)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_153_5' is marked as complete unroll implied by the pipeline pragma (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:153:25)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_167_1' is marked as complete unroll implied by the pipeline pragma (/home/changhong/prj/finn/deps/finn-hlslib/mac.hpp:167:21)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_164_6' is marked as complete unroll implied by the pipeline pragma (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:164:25)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_166_7' is marked as complete unroll implied by the pipeline pragma (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:166:20)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_216_1' is marked as complete unroll implied by the pipeline pragma (/home/changhong/prj/finn/deps/finn-hlslib/activations.hpp:216:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_139_2' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:139:25) in function 'Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>' completely with a factor of 8 (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:98:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_141_3' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:141:20) in function 'Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>' completely with a factor of 1 (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:98:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_150_4' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:150:23) in function 'Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>' completely with a factor of 8 (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:98:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_153_5' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:153:25) in function 'Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>' completely with a factor of 1 (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:98:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_167_1' (/home/changhong/prj/finn/deps/finn-hlslib/mac.hpp:167:21) in function 'Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>' completely with a factor of 3 (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:98:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_134_1' (/home/changhong/prj/finn/deps/finn-hlslib/weights.hpp:134:22) in function 'Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>' completely with a factor of 3 (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:98:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_164_6' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:164:25) in function 'Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>' completely with a factor of 8 (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:98:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_166_7' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:166:20) in function 'Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>' completely with a factor of 1 (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:98:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_216_1' (/home/changhong/prj/finn/deps/finn-hlslib/activations.hpp:216:20) in function 'Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>' completely with a factor of 15 (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:98:0)
INFO: [HLS 214-178] Inlining function 'std::__array_traits<ap_int<4>, 3ul>::_S_ref(ap_int<4> const (&) [3], unsigned long)' into 'std::array<ap_int<4>, 3ul>::operator[](unsigned long)' (/tools/Xilinx/Vitis_HLS/2022.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/array:186:0)
INFO: [HLS 214-178] Inlining function 'std::__array_traits<ap_int<4>, 3ul>::_S_ref(ap_int<4> const (&) [3], unsigned long)' into 'std::array<ap_int<4>, 3ul>::operator[](unsigned long) const' (/tools/Xilinx/Vitis_HLS/2022.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/array:190:0)
INFO: [HLS 214-178] Inlining function 'std::array<ap_int<4>, 3ul>::operator[](unsigned long)' into 'void Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>(hls::stream<ap_uint<24>, 0>&, hls::stream<ap_uint<32>, 0>&, FixedPointWeights<3u, ap_int<4>, 8u, 4u> const&, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > > const&, int, ap_resource_dflt const&)' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:98:0)
INFO: [HLS 214-178] Inlining function 'std::array<ap_int<4>, 3ul>::operator[](unsigned long) const' into 'void Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>(hls::stream<ap_uint<24>, 0>&, hls::stream<ap_uint<32>, 0>&, FixedPointWeights<3u, ap_int<4>, 8u, 4u> const&, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > > const&, int, ap_resource_dflt const&)' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:98:0)
INFO: [HLS 214-178] Inlining function 'ap_int<8> Caster<ap_int<8> >::cast<8>(ap_int<8> const&)' into 'void Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>(hls::stream<ap_uint<24>, 0>&, hls::stream<ap_uint<32>, 0>&, FixedPointWeights<3u, ap_int<4>, 8u, 4u> const&, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > > const&, int, ap_resource_dflt const&)' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:98:0)
INFO: [HLS 214-248] Applying array_partition to '_ZL7threshs': Complete partitioning on dimension 1. Complete partitioning on dimension 3. (/tmp/finn_dev_root/code_gen_ipgen_MVAU_hls_0_0r_f10vz/thresh.h:1:0)
INFO: [HLS 214-248] Applying array_partition to 'weights': Complete partitioning on dimension 1.
INFO: [HLS 214-248] Applying array_partition to 'accu': Complete partitioning on dimension 1. Complete partitioning on dimension 2. (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:113:33)
INFO: [HLS 214-364] Automatically inlining function 'comp::less_equal<ap_int<13>, ap_int<13> >::operator()(ap_int<13> const&, ap_int<13> const&) const' to improve effectiveness of pipeline pragma in function 'void Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>(hls::stream<ap_uint<24>, 0>&, hls::stream<ap_uint<32>, 0>&, FixedPointWeights<3u, ap_int<4>, 8u, 4u> const&, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > > const&, int, ap_resource_dflt const&)' (/home/changhong/prj/finn/deps/finn-hlslib/activations.hpp:218:10)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.61 seconds. CPU system time: 0.48 seconds. Elapsed time: 3.11 seconds; current allocated memory: 1.078 GB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.078 GB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 1.088 GB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.06 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.06 seconds; current allocated memory: 1.099 GB.
INFO: [XFORM 203-102] Automatically partitioning small array 'weights_7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'weights_6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'weights_5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'weights_4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'weights_3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'weights_2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'weights_1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'weights_0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_7_9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_7_8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_7_7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_7_6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_7_5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_7_4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_7_3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_7_2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_7_14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_7_13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_7_12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_7_11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_7_10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_7_1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_7_0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_6_9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_6_8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_6_7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_6_6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_6_5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_6_4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_6_3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_6_2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_6_14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_6_13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_6_12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_6_11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_6_10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_6_1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_6_0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_5_9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_5_8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_5_7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_5_6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_5_5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_5_4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_5_3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_5_2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_5_14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_5_13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_5_12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_5_11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_5_10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_5_1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_5_0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_4_9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_4_8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_4_7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_4_6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_4_5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_4_4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_4_3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_4_2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_4_14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_4_13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_4_12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_4_11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_4_10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_4_1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_4_0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_3_9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_3_8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_3_7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_3_6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_3_5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_3_4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_3_3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_3_2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_3_14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_3_13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_3_12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_3_11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_3_10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_3_1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_3_0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_2_9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_2_8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_2_7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_2_6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_2_5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_2_4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_2_3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_2_2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_2_14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_2_13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_2_12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_2_11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_2_10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_2_1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_2_0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_1_9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_1_8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_1_7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_1_6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_1_5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_1_4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_1_3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_1_2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_1_14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_1_13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_1_12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_1_11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_1_10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_1_1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_1_0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_0_9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_0_8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_0_7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_0_6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_0_5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_0_4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_0_3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_0_2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_0_14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_0_13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_0_12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_0_11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_0_10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_0_1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array '_ZL7threshs_0_0' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'weights_7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'weights_6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'weights_5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'weights_4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'weights_3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'weights_2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'weights_1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'weights_0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_7_9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_7_8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_7_7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_7_6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_7_5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_7_4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_7_3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_7_2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_7_14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_7_13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_7_12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_7_11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_7_10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_7_1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_7_0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_6_9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_6_8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_6_7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_6_6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_6_5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_6_4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_6_3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_6_2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_6_14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_6_13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_6_12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_6_11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_6_10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_6_1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_6_0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_5_9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_5_8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_5_7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_5_6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_5_5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_5_4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_5_3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_5_2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_5_14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_5_13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_5_12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_5_11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_5_10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_5_1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_5_0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_4_9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_4_8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_4_7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_4_6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_4_5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_4_4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_4_3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_4_2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_4_14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_4_13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_4_12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_4_11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_4_10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_4_1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_4_0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_3_9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_3_8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_3_7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_3_6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_3_5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_3_4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_3_3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_3_2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_3_14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_3_13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_3_12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_3_11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_3_10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_3_1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_3_0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_2_9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_2_8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_2_7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_2_6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_2_5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_2_4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_2_3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_2_2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_2_14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_2_13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_2_12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_2_11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_2_10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_2_1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_2_0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_1_9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_1_8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_1_7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_1_6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_1_5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_1_4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_1_3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_1_2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_1_14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_1_13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_1_12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_1_11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_1_10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_1_1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_1_0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_0_9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_0_8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_0_7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_0_6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_0_5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_0_4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_0_3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_0_2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_0_14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_0_13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_0_12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_0_11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_0_10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_0_1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array '_ZL7threshs_0_0' in dimension 1 completely.
INFO: [XFORM 203-11] Balancing expressions in function 'Matrix_Vector_Activate_Batch<3u, 32u, 3u, 8u, 1u, Slice<ap_int<8>, 8u>, Slice<ap_uint<4>, 4u>, Identity, ap_uint<24>, ap_uint<32>, FixedPointWeights<3u, ap_int<4>, 8u, 4u>, ThresholdsActivation<4u, 8u, 15u, ap_int<13>, ap_uint<4>, 0, comp::less_equal<ap_int<13>, ap_int<13> > >, ap_resource_dflt>' (/home/changhong/prj/finn/deps/finn-hlslib/mvau.hpp:98:21)...112 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.3 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.31 seconds; current allocated memory: 1.134 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.09 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 1.137 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'MVAU_hls_0' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Matrix_Vector_Activate_Batch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=ret_V_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=ret_V_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=ret_V_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=ret_V_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=ret_V_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=ret_V_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=ret_V_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=ret_V_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=ret_V_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=ret_V_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=ret_V_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=ret_V_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=ret_V_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=ret_V_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=ret_V_1) to 3 in order to utilize available DSP registers.
