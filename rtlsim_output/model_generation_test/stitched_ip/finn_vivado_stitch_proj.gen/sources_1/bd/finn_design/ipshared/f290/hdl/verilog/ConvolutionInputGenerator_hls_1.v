// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ConvolutionInputGenerator_hls_1_ConvolutionInputGenerator_hls_1,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.889937,HLS_SYN_LAT=89,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=534,HLS_SYN_LUT=588,HLS_VERSION=2022_2}" *)

module ConvolutionInputGenerator_hls_1 (
        ap_clk,
        ap_rst_n,
        in0_V_TVALID,
        out_V_TREADY,
        in0_V_TDATA,
        in0_V_TREADY,
        out_V_TDATA,
        out_V_TVALID
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter2_fsm_state3 = 2'd2;
parameter    ap_ST_iter3_fsm_state4 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    ap_ST_iter2_fsm_state0 = 2'd1;
parameter    ap_ST_iter3_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst_n;
input   in0_V_TVALID;
input   out_V_TREADY;
input  [127:0] in0_V_TDATA;
output   in0_V_TREADY;
output  [127:0] out_V_TDATA;
output   out_V_TVALID;

 reg    ap_rst_n_inv;
reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
wire   [0:0] icmp_ln1907_fu_159_p2;
wire   [0:0] we_fu_192_p2;
wire   [0:0] icmp_ln1924_fu_232_p2;
reg    ap_predicate_op49_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_CS_iter1_fsm_state2;
reg   [1:0] ap_CS_iter2_fsm;
reg   [0:0] icmp_ln1907_reg_365;
reg   [0:0] icmp_ln1907_reg_365_pp0_iter1_reg;
reg   [0:0] re_reg_369;
reg   [0:0] re_reg_369_pp0_iter1_reg;
reg    ap_predicate_op72_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
wire    ap_CS_iter2_fsm_state3;
reg   [1:0] ap_CS_iter3_fsm;
reg   [0:0] icmp_ln1907_reg_365_pp0_iter2_reg;
reg   [0:0] re_reg_369_pp0_iter2_reg;
reg    ap_predicate_op73_write_state4;
wire    regslice_both_out_V_U_apdone_blk;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_state4_io;
wire    ap_CS_iter3_fsm_state4;
reg    ap_condition_exit_pp0_iter0_stage0;
reg    ap_ready_int;
reg    in0_V_TDATA_blk_n;
reg    out_V_TDATA_blk_n;
wire   [0:0] icmp_ln1907_reg_365_pp0_iter0_reg;
wire   [0:0] re_fu_174_p2;
wire   [0:0] re_reg_369_pp0_iter0_reg;
reg   [0:0] we_reg_373;
wire   [0:0] we_reg_373_pp0_iter0_reg;
reg   [0:0] icmp_ln1924_reg_377;
wire   [0:0] icmp_ln1924_reg_377_pp0_iter0_reg;
reg   [127:0] in0_V_read_reg_381;
wire   [127:0] buffer_V_q0;
wire   [0:0] buffer_V_address0;
reg    buffer_V_ce0;
wire   [0:0] buffer_V_address1;
reg    buffer_V_ce1;
reg    buffer_V_we1;
wire   [63:0] zext_ln1912_fu_251_p1;
wire   [63:0] zext_ln1925_fu_300_p1;
reg   [6:0] i_fu_70;
wire   [6:0] i_2_fu_165_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i_1;
reg   [31:0] wp_fu_74;
wire   [31:0] wp_2_fu_317_p3;
reg   [31:0] ocnt_fu_78;
wire   [31:0] ocnt_2_fu_210_p3;
reg   [31:0] ap_sig_allocacmp_ocnt_load;
reg   [31:0] rp_fu_82;
wire   [31:0] rp_2_fu_284_p3;
reg   [31:0] inp_count_fu_86;
wire   [31:0] inp_count_1_fu_226_p2;
reg   [31:0] ap_sig_allocacmp_inp_count_load;
wire   [0:0] icmp_ln1910_fu_180_p2;
wire   [0:0] icmp_ln1910_1_fu_186_p2;
wire   [31:0] ocnt_1_fu_198_p2;
wire   [0:0] icmp_ln1921_fu_204_p2;
wire   [31:0] rp_1_fu_256_p2;
wire   [30:0] tmp_fu_262_p4;
wire   [0:0] icmp_ln1916_fu_272_p2;
wire   [31:0] add_ln1916_fu_278_p2;
wire   [31:0] wp_1_fu_305_p2;
wire   [0:0] icmp_ln1926_fu_311_p2;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg   [1:0] ap_NS_iter2_fsm;
reg   [1:0] ap_NS_iter3_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
wire    ap_ST_iter1_fsm_state2_blk;
reg    ap_ST_iter2_fsm_state3_blk;
reg    ap_ST_iter3_fsm_state4_blk;
wire    ap_start_int;
wire    ap_ready;
wire    ap_done;
wire    ap_continue_int;
wire    regslice_both_in0_V_U_apdone_blk;
wire   [127:0] in0_V_TDATA_int_regslice;
wire    in0_V_TVALID_int_regslice;
reg    in0_V_TREADY_int_regslice;
wire    regslice_both_in0_V_U_ack_in;
reg    out_V_TVALID_int_regslice;
wire    out_V_TREADY_int_regslice;
wire    regslice_both_out_V_U_vld_out;
reg    ap_condition_399;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_CS_iter2_fsm = 2'd1;
#0 ap_CS_iter3_fsm = 2'd1;
end

ConvolutionInputGenerator_hls_1_buffer_V_RAM_S2P_LUTRAM_1R1W #(
    .DataWidth( 128 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
buffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_V_address0),
    .ce0(buffer_V_ce0),
    .q0(buffer_V_q0),
    .address1(buffer_V_address1),
    .ce1(buffer_V_ce1),
    .we1(buffer_V_we1),
    .d1(in0_V_read_reg_381)
);

ConvolutionInputGenerator_hls_1_flow_control_loop_pipe_no_ap_cont flow_control_loop_pipe_no_ap_cont_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(1'b1),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(1'b0),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(1'b0)
);

ConvolutionInputGenerator_hls_1_regslice_both #(
    .DataWidth( 128 ))
regslice_both_in0_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in0_V_TDATA),
    .vld_in(in0_V_TVALID),
    .ack_in(regslice_both_in0_V_U_ack_in),
    .data_out(in0_V_TDATA_int_regslice),
    .vld_out(in0_V_TVALID_int_regslice),
    .ack_out(in0_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_in0_V_U_apdone_blk)
);

ConvolutionInputGenerator_hls_1_regslice_both #(
    .DataWidth( 128 ))
regslice_both_out_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(buffer_V_q0),
    .vld_in(out_V_TVALID_int_regslice),
    .ack_in(out_V_TREADY_int_regslice),
    .data_out(out_V_TDATA),
    .vld_out(regslice_both_out_V_U_vld_out),
    .ack_out(out_V_TREADY),
    .apdone_blk(regslice_both_out_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter3_fsm <= ap_ST_iter3_fsm_state0;
    end else begin
        ap_CS_iter3_fsm <= ap_NS_iter3_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_399)) begin
        if ((icmp_ln1907_fu_159_p2 == 1'd0)) begin
            i_fu_70 <= i_2_fu_165_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_70 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_399)) begin
        if (((we_fu_192_p2 == 1'd1) & (icmp_ln1907_fu_159_p2 == 1'd0))) begin
            inp_count_fu_86 <= inp_count_1_fu_226_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            inp_count_fu_86 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_399)) begin
        if (((icmp_ln1907_fu_159_p2 == 1'd0) & (re_fu_174_p2 == 1'd0))) begin
            ocnt_fu_78 <= ocnt_2_fu_210_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            ocnt_fu_78 <= 32'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op49_read_state1 == 1'b1) & (in0_V_TVALID_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        rp_fu_82 <= 32'd0;
    end else if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter1_fsm_state2) & (re_reg_369_pp0_iter0_reg == 1'd0) & (icmp_ln1907_reg_365_pp0_iter0_reg == 1'd0))) begin
        rp_fu_82 <= rp_2_fu_284_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op49_read_state1 == 1'b1) & (in0_V_TVALID_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        wp_fu_74 <= 32'd0;
    end else if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln1924_reg_377_pp0_iter0_reg == 1'd1) & (we_reg_373_pp0_iter0_reg == 1'd1) & (icmp_ln1907_reg_365_pp0_iter0_reg == 1'd0))) begin
        wp_fu_74 <= wp_2_fu_317_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op49_read_state1 == 1'b1) & (in0_V_TVALID_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        icmp_ln1907_reg_365 <= icmp_ln1907_fu_159_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        icmp_ln1907_reg_365_pp0_iter1_reg <= icmp_ln1907_reg_365;
        re_reg_369_pp0_iter1_reg <= re_reg_369;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        icmp_ln1907_reg_365_pp0_iter2_reg <= icmp_ln1907_reg_365_pp0_iter1_reg;
        re_reg_369_pp0_iter2_reg <= re_reg_369_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op49_read_state1 == 1'b1) & (in0_V_TVALID_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1) & (we_fu_192_p2 == 1'd1) & (icmp_ln1907_fu_159_p2 == 1'd0))) begin
        icmp_ln1924_reg_377 <= icmp_ln1924_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op49_read_state1 == 1'b1) & (in0_V_TVALID_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_predicate_op49_read_state1 == 1'b1))) begin
        in0_V_read_reg_381 <= in0_V_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op49_read_state1 == 1'b1) & (in0_V_TVALID_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln1907_fu_159_p2 == 1'd0))) begin
        re_reg_369 <= re_fu_174_p2;
        we_reg_373 <= we_fu_192_p2;
    end
end

always @ (*) begin
    if (((ap_predicate_op49_read_state1 == 1'b1) & (in0_V_TVALID_int_regslice == 1'b0))) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_iter1_fsm_state2_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) begin
        ap_ST_iter2_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_iter2_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) begin
        ap_ST_iter3_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_iter3_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op49_read_state1 == 1'b1) & (in0_V_TVALID_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln1907_fu_159_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op49_read_state1 == 1'b1) & (in0_V_TVALID_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 7'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_70;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_inp_count_load = 32'd0;
    end else begin
        ap_sig_allocacmp_inp_count_load = inp_count_fu_86;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_ocnt_load = 32'd2;
    end else begin
        ap_sig_allocacmp_ocnt_load = ocnt_fu_78;
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        buffer_V_ce0 = 1'b1;
    end else begin
        buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        buffer_V_ce1 = 1'b1;
    end else begin
        buffer_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln1924_reg_377_pp0_iter0_reg == 1'd1) & (we_reg_373_pp0_iter0_reg == 1'd1) & (icmp_ln1907_reg_365_pp0_iter0_reg == 1'd0))) begin
        buffer_V_we1 = 1'b1;
    end else begin
        buffer_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_predicate_op49_read_state1 == 1'b1))) begin
        in0_V_TDATA_blk_n = in0_V_TVALID_int_regslice;
    end else begin
        in0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op49_read_state1 == 1'b1) & (in0_V_TVALID_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_predicate_op49_read_state1 == 1'b1))) begin
        in0_V_TREADY_int_regslice = 1'b1;
    end else begin
        in0_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op73_write_state4 == 1'b1) & (1'b1 == ap_CS_iter3_fsm_state4)) | ((ap_predicate_op72_write_state3 == 1'b1) & (1'b1 == ap_CS_iter2_fsm_state3)))) begin
        out_V_TDATA_blk_n = out_V_TREADY_int_regslice;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (ap_predicate_op72_write_state3 == 1'b1) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        out_V_TVALID_int_regslice = 1'b1;
    end else begin
        out_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & ~((ap_predicate_op49_read_state1 == 1'b1) & (in0_V_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & (ap_predicate_op49_read_state1 == 1'b1) & (in0_V_TVALID_int_regslice == 1'b0))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op49_read_state1 == 1'b1) & (in0_V_TVALID_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if ((~((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else if ((~((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b0 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter3_fsm)
        ap_ST_iter3_fsm_state4 : begin
            if ((~((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))) & ~((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else if ((~((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))) & ((1'b0 == ap_CS_iter2_fsm_state3) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end else if ((~((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))) & (icmp_ln1907_reg_365_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
                ap_NS_iter3_fsm = ap_ST_iter0_fsm_state1;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end
        end
        ap_ST_iter3_fsm_state0 : begin
            if ((~((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter3_fsm = 'bx;
        end
    endcase
end

assign add_ln1916_fu_278_p2 = ($signed(rp_fu_82) + $signed(32'd4294967295));

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm[32'd1];

assign ap_CS_iter3_fsm_state4 = ap_CS_iter3_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_predicate_op49_read_state1 == 1'b1) & (in0_V_TVALID_int_regslice == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state4_io = ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((regslice_both_out_V_U_apdone_blk == 1'b1) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_condition_399 = (~(((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op72_write_state3 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0)))) | ((ap_predicate_op49_read_state1 == 1'b1) & (in0_V_TVALID_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((regslice_both_out_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((ap_predicate_op73_write_state4 == 1'b1) & (out_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_predicate_op49_read_state1 = ((icmp_ln1924_fu_232_p2 == 1'd1) & (we_fu_192_p2 == 1'd1) & (icmp_ln1907_fu_159_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op72_write_state3 = ((re_reg_369_pp0_iter1_reg == 1'd0) & (icmp_ln1907_reg_365_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op73_write_state4 = ((re_reg_369_pp0_iter2_reg == 1'd0) & (icmp_ln1907_reg_365_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign buffer_V_address0 = zext_ln1912_fu_251_p1;

assign buffer_V_address1 = zext_ln1925_fu_300_p1;

assign i_2_fu_165_p2 = (ap_sig_allocacmp_i_1 + 7'd1);

assign icmp_ln1907_fu_159_p2 = ((ap_sig_allocacmp_i_1 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln1907_reg_365_pp0_iter0_reg = icmp_ln1907_reg_365;

assign icmp_ln1910_1_fu_186_p2 = ((ap_sig_allocacmp_ocnt_load == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1910_fu_180_p2 = ((ap_sig_allocacmp_i_1 < 7'd3) ? 1'b1 : 1'b0);

assign icmp_ln1916_fu_272_p2 = ((tmp_fu_262_p4 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln1921_fu_204_p2 = ((ocnt_1_fu_198_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln1924_fu_232_p2 = ((inp_count_1_fu_226_p2 < 32'd31) ? 1'b1 : 1'b0);

assign icmp_ln1924_reg_377_pp0_iter0_reg = icmp_ln1924_reg_377;

assign icmp_ln1926_fu_311_p2 = ((wp_1_fu_305_p2 == 32'd2) ? 1'b1 : 1'b0);

assign in0_V_TREADY = regslice_both_in0_V_U_ack_in;

assign inp_count_1_fu_226_p2 = (ap_sig_allocacmp_inp_count_load + 32'd1);

assign ocnt_1_fu_198_p2 = (ap_sig_allocacmp_ocnt_load + 32'd1);

assign ocnt_2_fu_210_p3 = ((icmp_ln1921_fu_204_p2[0:0] == 1'b1) ? 32'd0 : ocnt_1_fu_198_p2);

assign out_V_TVALID = regslice_both_out_V_U_vld_out;

assign re_fu_174_p2 = ((ap_sig_allocacmp_i_1 == 7'd0) ? 1'b1 : 1'b0);

assign re_reg_369_pp0_iter0_reg = re_reg_369;

assign rp_1_fu_256_p2 = (rp_fu_82 + 32'd1);

assign rp_2_fu_284_p3 = ((icmp_ln1916_fu_272_p2[0:0] == 1'b1) ? add_ln1916_fu_278_p2 : rp_1_fu_256_p2);

assign tmp_fu_262_p4 = {{rp_1_fu_256_p2[31:1]}};

assign we_fu_192_p2 = (icmp_ln1910_fu_180_p2 | icmp_ln1910_1_fu_186_p2);

assign we_reg_373_pp0_iter0_reg = we_reg_373;

assign wp_1_fu_305_p2 = (wp_fu_74 + 32'd1);

assign wp_2_fu_317_p3 = ((icmp_ln1926_fu_311_p2[0:0] == 1'b1) ? 32'd0 : wp_1_fu_305_p2);

assign zext_ln1912_fu_251_p1 = rp_fu_82;

assign zext_ln1925_fu_300_p1 = wp_fu_74;

endmodule //ConvolutionInputGenerator_hls_1
